name: Windows Build

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up MSVC (x64)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install CUDA Toolkit
        run: choco install cuda --yes --no-progress --timeout 7200
        shell: pwsh

      - name: Export CUDA environment
        shell: pwsh
        run: |
          $cudaRoot = Get-ChildItem 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA' -ErrorAction SilentlyContinue | Sort-Object Name -Descending | Select-Object -First 1
          if (-not $cudaRoot) { throw 'CUDA installation not found under C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA' }
          Add-Content -Path $env:GITHUB_ENV -Value "CUDA_PATH=$($cudaRoot.FullName)"
          Add-Content -Path $env:GITHUB_ENV -Value "CUDA_HOME=$($cudaRoot.FullName)"
          Add-Content -Path $env:GITHUB_PATH -Value "$($cudaRoot.FullName)\bin"
          Add-Content -Path $env:GITHUB_PATH -Value "$($cudaRoot.FullName)\libnvvp"

      - name: Configure with CMake
        shell: pwsh
        run: |
          cmake -B build -S . -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_C_COMPILER=cl `
            -DCMAKE_CXX_COMPILER=cl `
            -DDVREN_ENABLE_CUDA=OFF `
            -DDVREN_BUILD_PROJECT_TESTS=ON `
            -DDVREN_ENABLE_HOTPATH_TESTS=OFF

      - name: Build Core Targets
        shell: pwsh
        run: |
          cmake --build build --config Release --target dvren_core_tests
          cmake --build build --config Release --target hp_runner

      - name: Run Unit Tests
        shell: pwsh
        run: ctest --output-on-failure -C Release
        working-directory: build

      - name: Run Hotpath Gates
        shell: pwsh
        run: |
          .\build\hotpath\Release\hp_runner.exe *> hp_scoreboard.log
          python hotpath/scripts/ci_check.py hp_scoreboard.log
